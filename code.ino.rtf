{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #define BLYNK_TEMPLATE_ID "TMPL3_8Uc-kwO"\
#define BLYNK_TEMPLATE_NAME "Air Quality"\
#define BLYNK_AUTH_TOKEN "vRVVU1WynuZ4bvt2AJ4AbF-_oMtmGgiW"\
\
#include <ESP8266WiFi.h>\
#include <BlynkSimpleEsp8266.h>\
#include <DHT.h>\
BlynkTimer timer;\
\
// DHT11 Sensor setup\
#define DHTPIN D7          // Digital pin D7 for DHT11\
#define DHTTYPE DHT11      // Define the type of DHT sensor (DHT11)\
DHT dht(DHTPIN, DHTTYPE);\
\
// MQ-2 Sensor setup\
int mq2 = A0;           // Smoke sensor is connected with the analog pin A0\
int data = 0;           // Variable to hold the sensor data\
\
char auth[] = "vRVVU1WynuZ4bvt2AJ4AbF-_oMtmGgiW"; // Blynk Authentication Token\
char ssid[] = "Iot";      // Wi-Fi Network Name\
char pass[] = "12345678"; // Wi-Fi Network Password\
\
void setup() \{\
  Serial.begin(115200);    // Initialize Serial Monitor\
  Blynk.begin(auth, ssid, pass);  // Connect to Blynk\
  dht.begin();            // Initialize DHT sensor\
  timer.setInterval(1000L, getSendData);  // Timer for periodic sensor reading\
\}\
\
void loop() \{\
  timer.run();  // Initiates SimpleTimer\
  Blynk.run();  // Process Blynk events\
\}\
\
void getSendData() \{\
  // Read smoke sensor data\
  data = analogRead(mq2);\
  Blynk.virtualWrite(V0, data);  // Send sensor value to virtual pin V0 (for smoke data)\
\
  // Apply a slight variation for CO2, such as adding an offset or scaling\
  // Let's say CO2 will be mapped from 0 to 800 ppm based on the smoke sensor data\
  int co2 = map(data, 0, 1023, 0, 800);  // Map smoke sensor data to CO2 range (0-800 ppm)\
\
  // Add a small variation to the CO2 level by adding a small random factor\
  int co2_variation = random(-50, 50); // Random variation between -50 and 50\
  co2 += co2_variation;  // Apply the variation to CO2 value\
\
  // Ensure CO2 stays within 0 to 800 ppm range\
  if (co2 < 0) co2 = 0;\
  if (co2 > 800) co2 = 800;\
\
  Blynk.virtualWrite(V1, co2);  // Send modified CO2 data to virtual pin V1\
\
  // Send alert if smoke level exceeds threshold\
  if (data > 850) \{\
    Blynk.logEvent("smoke", "Smoke Detected!");  // Sends a notification to the Blynk app\
  \}\
\
  // Read temperature and humidity from DHT11 sensor\
  float h = dht.readHumidity();\
  float t = dht.readTemperature();\
\
  // Check if reading from DHT sensor is successful\
  if (isnan(h) || isnan(t)) \{\
    Serial.println("Failed to read from DHT sensor!");\
    return;\
  \}\
\
  // Send humidity and temperature data to Blynk virtual pins\
  Blynk.virtualWrite(V2, t);  // Send temperature to virtual pin V2\
  Blynk.virtualWrite(V3, h);  // Send humidity to virtual pin V3\
\
  // Output the temperature and humidity to the Serial Monitor\
  Serial.print("Temperature: ");\
  Serial.print(t);\
  Serial.print(" \'b0C, Humidity: ");\
  Serial.print(h);\
  Serial.println(" %");\
\
  // Output CO2 and smoke data to Serial Monitor\
  Serial.print("CO2 Level: ");\
  Serial.print(co2);\
  Serial.println(" ppm");\
  Serial.print("Smoke Sensor Value: ");\
  Serial.println(data);\
\}}